class ExplorationExploitationScheduler:

    def __init__(
        self,
        epsilon_initial: float = 1.0,
        epsilon_middle: float = 0.1,
        middle_annealing_steps: int = 100000,
        epsilon_final: float = 0.01,
        final_annealing_steps: int = 100000,
    ):
        self.__middle_annealing_steps = middle_annealing_steps
        self.__epsilon = epsilon_initial
        self.__epsilon_final = epsilon_final
        self.__steps_taken = 0
        self.__slope_1 = (epsilon_initial - epsilon_middle) / middle_annealing_steps
        self.__slope_2 = (epsilon_middle - final_annealing_steps) / final_annealing_steps

    def next_epsilon(self) -> float:
        if self.__steps_taken < self.__middle_annealing_steps:
            slope = self.__slope_1
        else:
            slope = self.__slope_2
        self.__steps_taken += 1
        self.__epsilon = max(self.__epsilon_final, self.__epsilon - slope)
        return self.__epsilon
